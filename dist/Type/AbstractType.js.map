{"version":3,"sources":["../../src/Type/AbstractType.js"],"names":["AbstractType","props","onValueChange","val","value","validate","setState","onOperatorChange","operator","doRenderDoubleInput","bind","doRenderValueInput","doRenderOperatorList","state","nextProps","isSingleValue","Array","isArray","aValue","bValue","onChange","aInput","bInput","selected","operators","e","target","Object","keys","map","getOperators","operatorList","getValueInput","Component","propTypes","func","string","defaultProps","console","warn"],"mappings":"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","file":"AbstractType.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class AbstractType extends React.Component {\n    static propTypes = {\n        onOperatorChange: PropTypes.func,\n        onValueChange: PropTypes.func,\n        operator: PropTypes.string,\n        doRenderValueInput: PropTypes.func,\n        doRenderOperatorList: PropTypes.func,\n        doRenderDoubleInput: PropTypes.func,\n    };\n\n    static defaultProps = {\n        value: '',\n        onOperatorChange: (value) => {\n            console.warn(value)\n        },\n        onValueChange: (value) => {\n            console.warn(value)\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        if (props.doRenderDoubleInput) {\n            this.doRenderDoubleInput = props.doRenderDoubleInput.bind(this);\n        }\n\n        if (props.doRenderValueInput) {\n            this.doRenderValueInput = props.doRenderValueInput.bind(this);\n        }\n\n        if (props.doRenderOperatorList) {\n            this.doRenderOperatorList = props.doRenderOperatorList.bind(this);\n        }\n\n        this.state = {\n            value: props.value,\n            operator: props.operator,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.value !== nextProps.value) {\n            this.setState({ value: nextProps.value });\n        }\n\n        if (this.state.operator !== nextProps.operator) {\n            this.setState({ operator: nextProps.operator });\n        }\n    }\n\n    onValueChange = (val) => {\n        const value = this.validate(val);\n\n        this.setState({ value });\n\n        this.props.onValueChange(value);\n    };\n\n    onOperatorChange = (operator) => {\n        this.setState({ operator });\n        this.props.onOperatorChange(operator);\n    };\n\n    /**\n     * @abstract\n     */\n    getOperators() {\n        return {};\n    }\n\n    /**\n     * @param {String} operator\n     *\n     * @return {boolean}\n     */\n    isSingleValue(operator) {\n        return true;\n    }\n\n    /**\n     * @param value\n     *\n     * @return {*}\n     */\n    validate(value) {\n        return value;\n    }\n\n    /**\n     * @return {*}\n     */\n    getValueInput() {\n        const { value } = this.state;\n\n        switch (false) {\n            case this.isSingleValue(this.state.operator):\n                const [aValue, bValue] = Array.isArray(value) ? value : [value, ''];\n\n                return this.doRenderDoubleInput(\n                    this.doRenderValueInput(aValue, (value) => this.onValueChange([value, bValue])),\n                    this.doRenderValueInput(bValue, (value) => this.onValueChange([aValue, value]))\n                );\n\n            default:\n                return this.doRenderValueInput(value, this.onValueChange);\n        }\n    }\n\n    /**\n     * @abstract\n     */\n    doRenderValueInput(value, onChange) {\n        return null;\n    }\n\n    /**\n     * @abstract\n     */\n    doRenderDoubleInput(aInput, bInput) {\n        return (\n            <div className=\"dos-filter__type--input--double\">\n                {aInput} <span>and</span> {bInput}\n            </div>\n        );\n    }\n\n    /**\n     * @abstract\n     */\n    doRenderOperatorList(selected, operators, onOperatorChange) {\n        return (\n            <select value={selected} onChange={(e) => onOperatorChange(e.target.value)}>\n                {Object.keys(operators).map((operator) => {\n                    return <option key={operator} value={operator}>{operators[operator]}</option>;\n                })}\n            </select>\n        );\n    }\n\n    render() {\n        const { operator } = this.state;\n        const operators = this.getOperators();\n        const operatorList = this.doRenderOperatorList(operator, operators, this.onOperatorChange);\n\n        return (\n            <div className=\"dos-filter__type\">\n                {operatorList &&\n                <div className=\"dos-filter__type--operator\">\n                    {operatorList}\n                </div>}\n                <div className=\"dos-filter__type--input\">\n                    {this.getValueInput()}\n                </div>\n            </div>\n        );\n    }\n}\n"]}