{"version":3,"sources":["../src/FilterList.js"],"names":["emptyFilter","FilterList","props","nextId","submit","e","onSubmit","getFilters","addFilter","filter","fields","first","setState","filters","state","set","cloneFilter","removeFilter","filterId","delete","clearFilters","onFieldChange","name","find","f","onValueChange","value","updateFilter","onOperatorChange","operator","doRenderFilterItem","removeLabel","doRenderFilterButtons","bind","onChangeDebounced","valueChangeDelay","onChange","nextProps","nextState","toList","toJS","create","field","findById","get","isEmpty","entrySeq","map","filterList","addLabel","clearLabel","submitLabel","filterButtons","doRenderList","Component","propTypes","instanceOf","isRequired","func","number","string","defaultProps"],"mappings":"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","file":"FilterList.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { OrderedMap, Set } from 'immutable';\nimport { debounce } from 'throttle-debounce';\nimport { FilterItem } from './FilterItem';\nimport { Filter } from './Filter';\n\nconst emptyFilter = new OrderedMap();\n\nexport class FilterList extends React.Component {\n    nextId = 0;\n\n    static propTypes = {\n        fields: PropTypes.instanceOf(Set).isRequired,\n        onChange: PropTypes.func,\n        onSubmit: PropTypes.func,\n        valueChangeDelay: PropTypes.number,\n        addLabel: PropTypes.string,\n        removeLabel: PropTypes.string,\n        clearLabel: PropTypes.string,\n        submitLabel: PropTypes.string,\n        doRenderFilterButtons: PropTypes.func,\n    };\n\n    static defaultProps = {\n        valueChangeDelay: 200,\n        removeLabel: 'x',\n        addLabel: '+ Add filter',\n        clearLabel: '- Clear all',\n        submitLabel: 'Submit',\n    };\n\n    constructor(props) {\n        super(props);\n\n        if (props.doRenderFilterButtons) {\n            this.doRenderFilterButtons = props.doRenderFilterButtons.bind(this);\n        }\n\n        // delayed usefull when interact with server side\n        // it prevents too many request to server.\n        this.onChangeDebounced = debounce(props.valueChangeDelay, false, props.onChange);\n\n        this.state = {\n            filters: emptyFilter,\n        };\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if (this.props.onChange && this.nextId) {\n            // should trigg only when `onValueChange` & `onOperatorChange` ?\n            this.onChangeDebounced(nextState.filters.toList().toJS(), this);\n        }\n    }\n\n    cloneFilter(filter) {\n        return Filter.create({ ...filter });\n    }\n\n    getFilters() {\n        return this.state.filters.toList().toJS();\n    }\n\n    submit = (e) => {\n        if (this.props.onSubmit) {\n            return this.props.onSubmit(this.getFilters(), this);\n        }\n    };\n\n    addFilter = () => {\n        const filter = this.props.fields.first();\n\n        this.setState({\n            filters: this.state.filters.set(++this.nextId, this.cloneFilter(filter))\n        });\n    };\n\n    removeFilter = (filterId) => {\n        this.setState({\n            filters: this.state.filters.delete(filterId)\n        });\n    };\n\n    clearFilters = () => {\n        this.setState({\n            filters: emptyFilter,\n        });\n    };\n\n    onFieldChange = (filterId, name) => {\n        const filter = this.props.fields.find(f => f.name === name);\n\n        this.setState({\n            filters: this.state.filters.set(filterId, this.cloneFilter(filter))\n        });\n    };\n\n    onValueChange = (filterId, value) => {\n        this.updateFilter(filterId, 'value', value);\n    };\n\n    onOperatorChange = (filterId, operator) => {\n        this.updateFilter(filterId, 'operator', operator);\n    };\n\n    updateFilter(filterId, field, value) {\n        const filter = this.findById(filterId);\n        filter[field] = value;\n\n        this.setState({\n            filters: this.state.filters.set(filterId, filter)\n        });\n    }\n\n    findById(filterId) {\n        return this.state.filters.get(filterId);\n    }\n\n    isEmpty() {\n        return this.state.filters.isEmpty();\n    }\n\n    doRenderList() {\n        if (this.isEmpty()) {\n            return null;\n        }\n\n        const { filters } = this.state;\n\n        return (\n            <ul className=\"dos-filter__list\">\n                {filters.entrySeq().map(this.doRenderFilterItem)}\n            </ul>\n        );\n    }\n\n    doRenderFilterItem = ([filterId, filter]) => {\n        const { fields, removeLabel } = this.props;\n\n        return <FilterItem\n            key={filterId}\n            filter={filter}\n            fields={fields}\n            removeLabel={removeLabel}\n            onRemoveClick={() => this.removeFilter(filterId)}\n            onFieldChange={(name) => this.onFieldChange(filterId, name)}\n            onValueChange={(value) => this.onValueChange(filterId, value)}\n            onOperatorChange={(operator) => this.onOperatorChange(filterId, operator)}\n        />\n    };\n\n    doRenderFilterButtons(filterList) {\n        const { addLabel, clearLabel, submitLabel } = filterList.props;\n\n        return (\n            <div className=\"dos-filter-panel__footer--buttons\">\n                <button onClick={filterList.addFilter}>{addLabel}</button>\n                <button onClick={filterList.clearFilters} disabled={filterList.isEmpty()}>{clearLabel}</button>\n                <button onClick={filterList.submit} disabled={filterList.isEmpty()}>{submitLabel}</button>\n            </div>\n        )\n    }\n\n    render() {\n        const filterButtons = this.doRenderFilterButtons(this);\n\n        return (\n            <div className=\"dos-filter-panel\">\n                <div className=\"dos-filter-panel__body\">\n                    {this.doRenderList()}\n                </div>\n                {filterButtons && <div className=\"dos-filter-panel__footer\">\n                    {filterButtons}\n                </div>}\n            </div>\n        );\n    }\n}\n"]}