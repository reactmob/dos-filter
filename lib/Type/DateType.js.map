{"version":3,"sources":["../../src/Type/DateType.js"],"names":["FILTER_EQUAL","FILTER_BETWEEN","FILTER_NOT_BETWEEN","FILTER_GREATER_THAN","FILTER_GREATER_THAN_EQUALS","FILTER_LESS_THAN","FILTER_LESS_THAN_EQUALS","DateType","operator","indexOf","val","value","onChange","e","target","defaultOperator"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,OAArB;AACA,IAAMC,iBAAiB,SAAvB;AACA,IAAMC,qBAAqB,aAA3B;AACA,IAAMC,sBAAsB,cAA5B;AACA,IAAMC,6BAA6B,qBAAnC;AACA,IAAMC,mBAAmB,WAAzB;AACA,IAAMC,0BAA0B,kBAAhC;;IAEqBC,Q;;;;;;;;;;;;;AAGjB;;;uCAGe;AAAA;;AACX,oDACKP,YADL,EACoB,IADpB,yBAEKC,cAFL,EAEsB,SAFtB,yBAGKC,kBAHL,EAG0B,aAH1B,yBAIKC,mBAJL,EAI2B,OAJ3B,yBAKKC,0BALL,EAKkC,aALlC,yBAMKC,gBANL,EAMwB,QANxB,yBAOKC,uBAPL,EAO+B,cAP/B;AASH;;AAED;;;;;;sCAGcE,Q,EAAU;AACpB,mBAAO,CAACP,cAAD,EAAiBC,kBAAjB,EAAqCO,OAArC,CAA6CD,QAA7C,MAA2D,CAAC,CAAnE;AACH;;AAED;;;;;;iCAGSE,G,EAAK;AACV;;AAEA,mBAAOA,GAAP;AACH;;AAED;;;;;;2CAGmBC,K,EAAOC,S,EAAU;AAChC,mBAAO,yCAAO,MAAK,MAAZ,EAAmB,OAAOD,KAA1B,EAAiC,UAAU,kBAACE,CAAD;AAAA,2BAAOD,UAASC,EAAEC,MAAF,CAASH,KAAlB,CAAP;AAAA,iBAA3C,GAAP;AACH;;;;;;AAvCgBJ,Q,CACVQ,e,GAAkBf,Y;kBADRO,Q","file":"DateType.js","sourcesContent":["import React from 'react';\nimport StringType  from './StringType';\n\nconst FILTER_EQUAL = 'EQUAL';\nconst FILTER_BETWEEN = 'BETWEEN';\nconst FILTER_NOT_BETWEEN = 'NOT_BETWEEN';\nconst FILTER_GREATER_THAN = 'GREATER_THAN';\nconst FILTER_GREATER_THAN_EQUALS = 'GREATER_THAN_EQUALS';\nconst FILTER_LESS_THAN = 'LESS_THAN';\nconst FILTER_LESS_THAN_EQUALS = 'LESS_THAN_EQUALS';\n\nexport default class DateType extends StringType {\n    static defaultOperator = FILTER_EQUAL;\n\n    /**\n     * @inheritDoc\n     */\n    getOperators() {\n        return {\n            [FILTER_EQUAL]: 'On',\n            [FILTER_BETWEEN]: 'Between',\n            [FILTER_NOT_BETWEEN]: 'Not Between',\n            [FILTER_GREATER_THAN]: 'after',\n            [FILTER_GREATER_THAN_EQUALS]: 'on or after',\n            [FILTER_LESS_THAN]: 'before',\n            [FILTER_LESS_THAN_EQUALS]: 'on or before',\n        };\n    }\n\n    /**\n     * @inheritDoc\n     */\n    isSingleValue(operator) {\n        return [FILTER_BETWEEN, FILTER_NOT_BETWEEN].indexOf(operator) === -1;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    validate(val) {\n        // TODO: validate date value\n\n        return val;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    doRenderValueInput(value, onChange) {\n        return <input type=\"date\" value={value} onChange={(e) => onChange(e.target.value)}/>;\n    }\n}\n"]}