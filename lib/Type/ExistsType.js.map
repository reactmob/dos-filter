{"version":3,"sources":["../../src/Type/ExistsType.js"],"names":["FILTER_EQUAL","ExistsChoiceConfig","yesLabel","yesValue","noLabel","noValue","arg","ExistsType","value","parseInt","onChange","choice","props","e","target","defaultOperator","propTypes","instanceOf","defaultProps","create"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,eAAe,OAArB;;IAEaC,kB,WAAAA,kB;AACT,kCAAkF;AAAA,uFAAJ,EAAI;AAAA,iCAApEC,QAAoE;AAAA,YAApEA,QAAoE,iCAAzD,KAAyD;AAAA,iCAAlDC,QAAkD;AAAA,YAAlDA,QAAkD,iCAAvC,CAAuC;AAAA,gCAApCC,OAAoC;AAAA,YAApCA,OAAoC,gCAA1B,IAA0B;AAAA,gCAApBC,OAAoB;AAAA,YAApBA,OAAoB,gCAAV,CAAU;;AAAA;;AAC9E,aAAKH,QAAL,GAAgBA,QAAhB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKC,OAAL,GAAeA,OAAf;AACH;;;;+BAEaC,G,EAAK;AACf,mBAAO,IAAIL,kBAAJ,CAAuBK,GAAvB,CAAP;AACH;;;;;;IAGgBC,U;;;;;;;;;;;iCAWRC,K,EAAO;AACZ,mBAAOC,SAASD,KAAT,CAAP;AACH;;AAED;;;;+CACuB;AACnB,mBAAO,IAAP;AACH;;;2CAEkBA,K,EAAOE,S,EAAU;AAAA,gBACxBC,MADwB,GACb,KAAKC,KADQ,CACxBD,MADwB;;;AAGhC,mBACI;AAAA;AAAA,kBAAQ,OAAOH,KAAf,EAAsB,UAAU,kBAACK,CAAD;AAAA,+BAAOH,UAASG,EAAEC,MAAF,CAASN,KAAlB,CAAP;AAAA,qBAAhC;AACI;AAAA;AAAA,sBAAQ,KAAKG,OAAOR,QAApB,EAA8B,OAAOQ,OAAOR,QAA5C;AAAuDQ,2BAAOT;AAA9D,iBADJ;AAEI;AAAA;AAAA,sBAAQ,KAAKS,OAAON,OAApB,EAA6B,OAAOM,OAAON,OAA3C;AAAqDM,2BAAOP;AAA5D;AAFJ,aADJ;AAMH;;;;;;AA7BgBG,U,CACVQ,e,GAAkBf,Y;AADRO,U,CAGVS,S,GAAY;AACfL,YAAQ,oBAAUM,UAAV,CAAqBhB,kBAArB;AADO,C;AAHFM,U,CAOVW,Y,GAAe;AAClBP,YAAQV,mBAAmBkB,MAAnB;AADU,C;kBAPLZ,U","file":"ExistsType.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AbstractType  from './AbstractType';\n\nconst FILTER_EQUAL = 'EQUAL';\n\nexport class ExistsChoiceConfig {\n    constructor({ yesLabel = 'Yes', yesValue = 1, noLabel = 'No', noValue = 0 } = {}) {\n        this.yesLabel = yesLabel;\n        this.yesValue = yesValue;\n        this.noLabel = noLabel;\n        this.noValue = noValue;\n    }\n\n    static create(arg) {\n        return new ExistsChoiceConfig(arg);\n    }\n}\n\nexport default class ExistsType extends AbstractType {\n    static defaultOperator = FILTER_EQUAL;\n\n    static propTypes = {\n        choice: PropTypes.instanceOf(ExistsChoiceConfig),\n    };\n\n    static defaultProps = {\n        choice: ExistsChoiceConfig.create(),\n    };\n\n    validate(value) {\n        return parseInt(value);\n    }\n\n    // no operator\n    doRenderOperatorList() {\n        return null;\n    }\n\n    doRenderValueInput(value, onChange) {\n        const { choice } = this.props;\n\n        return (\n            <select value={value} onChange={(e) => onChange(e.target.value)}>\n                <option key={choice.yesValue} value={choice.yesValue}>{choice.yesLabel}</option>\n                <option key={choice.noValue} value={choice.noValue}>{choice.noLabel}</option>\n            </select>\n        );\n    }\n}\n"]}